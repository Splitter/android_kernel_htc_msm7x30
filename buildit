#!/bin/bash

echo "*********************************************"
echo "*****   AUTO BUILD & PACKAGE SCRIPT     *****"
echo "*********************************************"


ARCH=arm
TOOLCHAIN=~/android/Kernel/toolchains/bin/arm-eabi-
BASE_DIR="$( cd "$( dirname "$0" )" && pwd )"
DEFCONFIG=speedy_defconfig
NUMJOBS=6
OPTIONS=-o2
ZIPFILES=zip_template
ZIPPREFIX="JB-Speedy"


#Pull local version from defconfig and append to zip file name
while read line; do
  if [[ $line == *"CONFIG_LOCALVERSION="* ]]  
  	then  	
  		VERSION=(${line//=/ })
  		VERSION=${VERSION[1]}
  		VERSION=${VERSION:1:(${#VERSION}-2)} 
  fi  
done < ./arch/arm/configs/$DEFCONFIG

ZIPNAME=$ZIPPREFIX$VERSION".zip"


echo ""
echo "beginning build process......"


#Check if 'debug' is passed as arguement
if [[ $1 -eq 0 && $1 == debug ]]
	then #DEBUG ENABLED
		echo ""
		echo "DEBUGGING ENABLED"
		echo "Rerouting stderr and stdout to txt files during build..."
		echo ""
		echo "ACTION: make clean -j$NUMJOBS"
		make clean -j$NUMJOBS
		echo ""
		echo "ACTION: make $DEFCONFIG &> config_debug.txt"
		make $DEFCONFIG &> config_debug.txt
		echo ""
		echo "ACTION:"
		echo "make -j$NUMJOBS $OPTIONS ARCH=$ARCH CROSS_COMPILE=$TOOLCHAIN &> build_debug.txt"
		make -j$NUMJOBS $OPTIONS ARCH=$ARCH CROSS_COMPILE=$TOOLCHAIN &> build_debug.txt

	else #DEBUG DISABLED
		echo ""
		echo "ACTION: make clean -j$NUMJOBS"
		make clean -j$NUMJOBS
		echo ""
		echo "ACTION: make $DEFCONFIG "
		make $DEFCONFIG
		echo ""
		echo "ACTION:"
		echo "make -j$NUMJOBS $OPTIONS ARCH=$ARCH CROSS_COMPILE=$TOOLCHAIN"
		make -j$NUMJOBS $OPTIONS ARCH=$ARCH CROSS_COMPILE=$TOOLCHAIN

		#Make sure kernel has been created before trying to create flashable zip
		if [ -e arch/arm/boot/zImage ]; 
			then
				echo ""
				echo "build finished......"
				echo "beginning packaging process......"
				echo ""
				echo "ACTION: create working directory..."
				rm -fr tmpdir
				mkdir tmpdir

				echo ""
				echo "ACTION: copy package template to working directory..."
				cp -a $ZIPFILES tmpdir/zipf
				mkdir tmpdir/zipf/system
				mkdir tmpdir/zipf/system/lib
				mkdir tmpdir/zipf/system/lib/modules

				echo ""
				echo "ACTION: copy kernel image over..."
				cp arch/arm/boot/zImage tmpdir/zipf/kernel

				echo ""
				echo "ACTION: copying all modules over..."
				for j in $(find . -name "*.ko"); do
				    cp "${j}" tmpdir/zipf/system/lib/modules/
				done

				echo ""
				echo "ACTION: creating CWM flashable zip..."

				cd tmpdir/zipf
				zip -r $ZIPNAME *
				cp -R $ZIPNAME $BASE_DIR
				cd ../../
				rm -fr tmpdir

				echo ""
				echo ""
				echo "ACTION: Zip $ZIPNAME built and placed in root dir..."
				echo ""
				echo ""


				echo "*********************************************"
				echo "*****   BUILD FINISHED!                 *****"
				echo "*********************************************"
			
				
			else	#Made it through build process and kernel image wasn't created
				echo ""
				echo ""
				echo "BUILD FAILED!@@!!@#!!@!"
				echo ""
				echo ""
		fi

fi






